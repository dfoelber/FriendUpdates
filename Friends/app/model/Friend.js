/*
 * File: app/model/Friend.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Friends.model.Friend', {
    extend: 'Ext.data.Model',

    fields: [
        {
            name: 'id'
        },
        {
            name: 'name'
        },
        {
            name: 'relevance',
            defaultValue: 0,
            type: 'int'
        },
        {
            name: 'mutual_friends_count',
            type: 'int'
        },
        {
            name: 'picture_url'
        }
    ],

    getPictureUrl: function(size) {
        var me = this,
            url;

        size = size || 'normal';
        url = Ext.String.format('http://graph.facebook.com/{0}/picture?type={1}', this.get('id'), size);

        me.set('picture_url', url);

    },

    getMutualFriendsCount: function() {
        var me = this;

        me.fql(Ext.String.format("select mutual_friend_count from user where uid={0}", me.get('id')), function(resp) {
        me.set('mutual_friends_count', resp.data[0].mutual_friend_count);
    });

    },

    fql: function(query, callback) {
        var me = this,
            fql = Ext.Object.toQueryString({
                q: Ext.String.format(query)
            });

        FB.api('/fql?' + fql, function(response) { 
            if (Ext.isFunction(callback)) {
                callback.call(me, response);
            }
        });
    },

    getAll: function() {
        // populate the fields in this model instance 

        var me = this;

        me.getPictureUrl();
        me.getMutualFriendsCount();
    }

});